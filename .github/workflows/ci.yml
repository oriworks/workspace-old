name: Continuous Integration
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - closed

jobs:
  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16]
        npm-version: [8]
        yarn-version: ['1.22.x']
        pnpm-version: [7]

    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout [Pull Request]
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Checkout [Default Branch]
        uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: 0

      - name: Use Node.js and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node-version }}'
          cache: 'yarn'

      - name: Install project dependencies
        run: yarn --prefer-offline

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v3

      - name: Test and Build
        run: |
          RUN=CI npx nx workspace-lint
          npx nx format:check
          npx nx affected --target lint --parallel 3
          npx nx affected --target test --parallel 3 --ci --code-coverage
          npx nx affected --target build --parallel 3

      - name: Release
        if: ${{ success() && (github.event_name != 'pull_request' || github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx nx affected --target release --parallel 3
